declare[Dictionary]={Module.link ['x-oz://system/adt/Dictionary.ozf']}
D = {Dictionary.new}
{D.put 1 'Hola'}
{Browse {D.get 1}}
{Browse {D.keys}}
{D.put 1 'Adios'}
{Browse {D.get 1}}

fun{CalcularInversaModular Valor1 Valor2}
   Inversa  in
   {Euclide Valor1 Valor2 Inversa _}
   if {Int.isNat Inversa} then
      Inversa
   else
      Inversa + Valor2
   end
end

proc {Euclide A B ?X ?Y} % Algoritmo extendido de euclides
   if B==0 then X=1 Y=0
   else
      local X1 Y1 {Euclide B (A mod B) X1 Y1}
      in X=Y1 Y=X1-Y1*(A div B)
      end
   end
end

{Browse 1 mod 65537}
{Browse {CalcularInversaModular 11 65537}}
