declare[Dictionary]={Module.link ['x-oz://system/adt/Dictionary.ozf']}
declare[IntBitSupport]={Module.link ['../../BitOperations/IntWithBitSupport.ozf']}

fun {GenKeys Value}
   D={Dictionary.new} Key in
   {GetKeys {Value asBinaryString($)} D}
	   
end

fun{GetKeys Value D}
	    
   proc{Loop TextBlock}
      Temp Key = {List.length {D.keys}} in
      if Key < 51 then
	 if {List.length  Value} > 0 then
	    {D.put Key {BitStringToInt {List.reverse {List.take TextBlock 16}}}}
	    {Loop {List.drop TextBlock 16}}
	 else
	    {Loop {Value shift(16 $)}} 
	 end
      end

   end in
   {Loop Value} D
end	