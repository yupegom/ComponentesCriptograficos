declare[IntBitSupport]={Module.link ['../../BitOperations/IntWithBitSupport.ozf']}
Int = 101126132999664296395764030884731589700
%Int = 10010002000300040005000600070008

Integer = {New IntBitSupport.intBitSupport init(128 Int)}
{Browse {List.length {IntToString {Integer getValue($)}}}}
{Browse {Integer getValue($)}}
{Browse {StringToAtom {Integer asBinaryString($)}}}
{Browse {List.length {Integer asBinaryString($)}}}
Integer2= {Integer shift(25 $)}
{Browse {Integer2 getValue($)}}
{Browse {List.length {IntToString {Integer2 getValue($)}}}}
{Browse {StringToAtom {Integer2 asBinaryString($)}}}
{Browse {List.length {Integer2 asBinaryString($)}}}
{Browse {Integer2 asBitString($)}}
IntegerX = {New IntBitSupport.intBitSupport init(128 41309)}
IntegerY = {New IntBitSupport.intBitSupport init(128 45102)}
{Browse {StringToAtom {IntegerX asBinaryString($)}}}
{Browse {StringToAtom {IntegerY asBinaryString($)}}}
Result = {IntegerX xor(IntegerY $)}
{Browse {StringToAtom {Result asBinaryString($)}}}
{Browse {Result getValue($)}}
{Browse  1*~1}
